------------------------------------- Employee Class----------------------------------
public class Employee {
    private String name;
    private int age;
    private double salary;

    public Employee(String name, int age, double salary) {
        this.name = name;
        this.age = age;
        this.salary = salary;
    }

    public String getName() { return name; }
    public int getAge() { return age; }
    public double getSalary() { return salary; }

    @Override
    public String toString() {
        return name + "\t" + age + "\t" + salary;
    }
}

Ô∏è-------------------------------- Main Program with Sorting-----------------------------------------
import java.util.*;

public class EmployeeSortDemo {
    public static void main(String[] args) {
        List<Employee> employees = Arrays.asList(
            new Employee("Alice", 30, 60000),
            new Employee("Bob", 25, 50000),
            new Employee("Charlie", 28, 70000),
            new Employee("David", 35, 55000),
            new Employee("Eva", 22, 65000)
        );

        System.out.println("Original List:");
        employees.forEach(System.out::println);

        // Sort by name alphabetically
        employees.sort((e1, e2) -> e1.getName().compareToIgnoreCase(e2.getName()));
        System.out.println("\nSorted by Name:");
        employees.forEach(System.out::println);

        // Sort by age ascending
        employees.sort(Comparator.comparingInt(Employee::getAge));
        System.out.println("\nSorted by Age (Ascending):");
        employees.forEach(System.out::println);

        // Sort by salary descending
        employees.sort((e1, e2) -> Double.compare(e2.getSalary(), e1.getSalary()));
        System.out.println("\nSorted by Salary (Descending):");
        employees.forEach(System.out::println);
    }
}
